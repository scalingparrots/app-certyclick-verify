name: Build and Release

env:
  BINARY_NAME: certyclick_verify
  GO_VERSION: 1.17

on:
  release:
    types: [created]

jobs:
  build-cli:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Get dependencies
        run: go mod download
      - name: Build CLI
        run: make cli
      - name: Upload Release Asset CLI
        id: upload-release-asset-cli
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./dist/${{ matrix.os }}/${{ env.BINARY_NAME }}_cli
          asset_name: ${{ env.BINARY_NAME }}_cli_${{ matrix.os }}
          tag: ${{ github.ref }}
          overwrite: true
          body: "This is my release text"

  build-gui:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Get dependencies
        run: go mod download
      - name: Install dependencies on Ubuntu
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libgl1-mesa-dev xorg-dev
      - name: Build GUI
        run: make gui
      - name: Upload Release Asset GUI
        id: upload-release-asset-gui
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./dist/${{ env.BINARY_NAME }}_gui
          asset_name: ${{ env.BINARY_NAME }}_gui_${{ matrix.os }}
          tag: ${{ github.ref }}
          overwrite: true
          body: "This is my release text"
