name: Build and Release

env:
  BINARY_NAME: certyclick_verify
  GO_VERSION: 1.17
  GOARCH: amd64
  DIST_DIR: dist
  CLI_DIR: cli
  GUI_DIR: gui

on:
  release:
    types: [created]

jobs:
  build-cli:
    strategy:
      matrix:
        os: [macos, windows, ubuntu]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Get dependencies
        run: go mod download
      - name: Build CLI
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "macos" ]]; then
            make cli-macos
          elif [[ "${{ matrix.os }}" == "ubuntu" ]]; then
            make cli-linux
          elif [[ "${{ matrix.os }}" == "windows" ]]; then
            make cli-windows
          fi
      - name: Upload Release Asset CLI
        id: upload-release-asset-cli
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./dist/${{ matrix.os }}/${{ env.BINARY_NAME }}${{ matrix.os == 'windows' && '_cli.exe' || '_cli' }}
          asset_name: ${{ env.BINARY_NAME }}${{ matrix.os == 'windows' && '_cli.exe' || '_cli' }}
          tag: ${{ github.ref }}
          overwrite: true
          body: ${{ github.ref }}

  build-gui:
    strategy:
      matrix:
        os: [macos, windows, ubuntu]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Get dependencies
        run: go mod download
      - name: Install dependencies on Ubuntu
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libgl1-mesa-dev xorg-dev
      - name: Build GUI
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "macos" ]]; then
            make gui-macos
          elif [[ "${{ matrix.os }}" == "ubuntu" ]]; then
            make gui-linux
          elif [[ "${{ matrix.os }}" == "windows" ]]; then
            make gui-windows
          fi
      - name: Upload Release Asset GUI
        id: upload-release-asset-gui
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./dist/${{ matrix.os }}/${{ env.BINARY_NAME }}${{ matrix.os == 'windows' && '_gui.exe' || '_gui' }}
          asset_name: ${{ env.BINARY_NAME }}${{ matrix.os == 'windows' && '_gui.exe' || '_gui' }}
          tag: ${{ github.ref }}
          overwrite: true
          body: ${{ github.ref }}
